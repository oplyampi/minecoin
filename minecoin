--[[
File Name: minecoin
Description: Basic Minecoin Client. Designed to be used by any user by having a simple interface. Doesn't support GUIs
Original Creator: Amarite1 (t3kbau5.tk)
Last update: March 29, 2013 @ 14:26 EST
----
Notes:
Channel 7337 is for peer finding
Channel 62646 is for generic Minecoin broadcasts
Channel 7367 is for transactions
]]--
--define constants
pChannel = 7337 --peer channel #
mChannel = 62646 --generic channel #
tChannel = 7367 --transaction notif. channel #
rChannel = os.getComputerID()+1 --reply channel; computer ID +1

clientVersion = "A1.0" --Current version of the Minecoin Client; displayed at the top of the terminal when the client is running

--define variables
numPeers = 0 --how many peers are connected?
peers = {} --list of connected peers
lastCheck = 0 --how long since the last time that we checked that clients are still online
openModems = {top=false, bottom=false, front=false, back=false, left=false, right=false} --holds which modems are open
modem = {} --holds the modem objects for each open side to allow access by 'modem[side]'

--functions
networking = function() --function that performs background messaging to uphold the p2p network
	--while true do
		local event, modemSide, senderChannel, replyChannel, message = os.pullEvent("modem_message")
		if message ~= "" then
			if message == "on" and senderChannel == pChannel then
				--modem.transmit(pChannel, replyChannel, "on") --this line is causing messages to bounce around on the peer channel indefinitely; need to fix
				numPeers = numPeers+1
				peers[numPeers] = replyChannel
			elseif message == "ping" and senderChannel == pChannel then
				modem.transmit(replyChannel, rChannel, "true")
			else
				data = textutils.unserialize(message)
			end
		end
	--end
end

openAll = function() --opens all the modems
	for _,side in pairs(rs.getSides()) do
		if peripheral.getType(side) == "modem" then
			modem[side] = peripheral.wrap(side)
			openModems[side] = true
			modem[side].open(pChannel)
			modem[side].open(mChannel)
			modem[side].open(tChannel)
			modem[side].open(rChannel)
		end
	end
end

transmitAll = function(sendingChannel, replyChannel, message) --sends message using all open modems
	for _,side in pairs(rs.getSides()) do
		if openModems[side] == true then
			modem[side].transmit(sendingChannel, replyChannel, message)
		end
	end
end

relay = function(ignoreModem, sendingChannel, replyChannel, message) --relays a message received on one modem through all other open modems
	
end

--start main stuff

--broadcast to the peer-finding network that computer is online
openAll()
transmitAll(pChannel, rChannel, "on")

local netThread = coroutine.create(networking()) --define networking coroutine
term.clear()
term.setCursorPos(1, 1)
print("Minecoin Client Version "..clientVersion)
while true do
	coroutine.resume(netThread) --start networking
end